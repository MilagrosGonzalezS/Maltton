{"ast":null,"code":"// import * as React from \"react\";\n// import useInterval from \"./UseInterval\";\n// function useSlider({\n//   total = 0, // the length of the slide array\n//   enabled = false, // pauses/disables the player\n//   useLoaded = false, // this allows for delayed loads like images or embeds\n//   speed = 1000, // speed in milliseconds to show each slide\n//   loop = true, // should it start back at the beginning\n// }) {\n//   const [offset, setOffset] = React.useState(0);\n//   const [items, setItems] = React.useState([]);\n//   function incrementOffset() {\n//     if (offset === total - 1) {\n//       setOffset(loop ? 0 : offset);\n//     } else {\n//       setOffset(offset + 1);\n//     }\n//   }\n//   function addItem(ref) {\n//     setItems([...items, ref]);\n//   }\n//   const loaded = useLoaded ? items.length === total : true;\n//   useInterval(() => {\n//     if (loaded && enabled && offset < total) {\n//       incrementOffset();\n//     }\n//   }, speed);\n//   return {\n//     offset, // this is the current index of the slider\n//     addItem, // this takes a ref and adds it to the items array to see if all have loaded\n//   };\n// }\n// export default useSlider;","map":{"version":3,"sources":["C:/proyectos/ProyectoMaltton/src/components/Carousel/useSlider.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import * as React from \"react\";\r\n// import useInterval from \"./UseInterval\";\r\n\r\n// function useSlider({\r\n//   total = 0, // the length of the slide array\r\n//   enabled = false, // pauses/disables the player\r\n//   useLoaded = false, // this allows for delayed loads like images or embeds\r\n//   speed = 1000, // speed in milliseconds to show each slide\r\n//   loop = true, // should it start back at the beginning\r\n// }) {\r\n//   const [offset, setOffset] = React.useState(0);\r\n//   const [items, setItems] = React.useState([]);\r\n\r\n//   function incrementOffset() {\r\n//     if (offset === total - 1) {\r\n//       setOffset(loop ? 0 : offset);\r\n//     } else {\r\n//       setOffset(offset + 1);\r\n//     }\r\n//   }\r\n\r\n//   function addItem(ref) {\r\n//     setItems([...items, ref]);\r\n//   }\r\n\r\n//   const loaded = useLoaded ? items.length === total : true;\r\n\r\n//   useInterval(() => {\r\n//     if (loaded && enabled && offset < total) {\r\n//       incrementOffset();\r\n//     }\r\n//   }, speed);\r\n\r\n//   return {\r\n//     offset, // this is the current index of the slider\r\n//     addItem, // this takes a ref and adds it to the items array to see if all have loaded\r\n//   };\r\n// }\r\n\r\n// export default useSlider;\r\n"]},"metadata":{},"sourceType":"module"}